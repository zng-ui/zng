name: CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: '--codegen=debuginfo=0 --deny=warnings'
  RUSTDOCFLAGS: '--deny=warnings'
  CARGO_TERM_COLOR: always
  ZNG_TP_LICENSES: false
  NEXTEST_RETRIES: 3

jobs:
  check-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: sudo apt-get update -o Acquire::Retries=5 && sudo apt install libfontconfig1-dev -o Acquire::Retries=5
      - uses: Swatinem/rust-cache@v2
      - run: cargo do version --verbose
      - run: cargo do fmt --check --full
      - run: cargo do check
      - run: cargo do l10n --all --check
  check-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo do version --verbose
      - run: cargo do fmt --check --full
      - run: cargo do check
  check-windows:
    runs-on: windows-latest
    env:
      CC: 'clang-cl'
      CXX: 'clang-cl'
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo do version --verbose
      - run: cargo do fmt --check --full
      - run: cargo do check
  check-release:
    runs-on: ubuntu-latest
    needs: [check-ubuntu]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: sudo apt-get update -o Acquire::Retries=5 && sudo apt install libfontconfig1-dev -o Acquire::Retries=5
      - uses: Swatinem/rust-cache@v2
      - run: cargo check --workspace --examples --tests --release
  check-wasm:
    runs-on: ubuntu-latest
    needs: [check-ubuntu]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:  
          targets: wasm32-unknown-unknown
      - name: install wasm-pack
        uses: baptiste0928/cargo-install@v3
        with:
          crate: wasm-pack
      - uses: Swatinem/rust-cache@v2
      - run: cargo do run-wasm multi --no-serve
  check-android:
    runs-on: ubuntu-latest
    needs: [check-ubuntu]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:  
          targets: aarch64-linux-android, armv7-linux-androideabi
      - name: install cargo-ndk
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-ndk
      - uses: Swatinem/rust-cache@v2
      - run: cargo do build-apk multi
  check-android-windows:
    runs-on: windows-latest
    needs: [check-windows]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:  
          targets: aarch64-linux-android, armv7-linux-androideabi
          components: clippy, rustfmt
      - name: install cargo-ndk
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-ndk
      - uses: Swatinem/rust-cache@v2
      - run: cargo do build-apk multi
  check-android-macos:
    runs-on: macos-latest
    needs: [check-macos]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:  
          targets: aarch64-linux-android, armv7-linux-androideabi
      - name: install cargo-ndk
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-ndk
      - uses: Swatinem/rust-cache@v2
      - run: cargo do build-apk multi
  # check-ios:
  #   runs-on: macos-latest
  #   needs: [check-macos]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dtolnay/rust-toolchain@stable
  #       with:  
  #         targets: aarch64-apple-ios
  #     - name: install cargo-lipo
  #       uses: baptiste0928/cargo-install@v3
  #       with:
  #         crate: cargo-lipo
  #     - uses: Swatinem/rust-cache@v2
  #     - run: cargo do build-ios multi
  doc:
    runs-on: ubuntu-latest
    needs: [check-ubuntu]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: sudo apt-get update -o Acquire::Retries=5 && sudo apt install libfontconfig1-dev -o Acquire::Retries=5
      - uses: Swatinem/rust-cache@v2
        with:
          cache-targets: false # do doc needs a clean target/doc
      - run: cargo do doc
  test-ubuntu:
    runs-on: ubuntu-latest
    needs: [check-ubuntu]
    env:
      ZNG_TP_LICENSES: true
    steps:
    - uses: dtolnay/rust-toolchain@stable
    - name: install cargo-about
      uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-about
    - name: install cargo-nextest
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest
    - run: sudo apt-get update -o Acquire::Retries=5 && sudo apt install libfontconfig1-dev -o Acquire::Retries=5
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - run: cargo do test --nextest
  test-windows:
    runs-on: windows-latest
    needs: [check-windows]
    env:
      ZNG_TP_LICENSES: true
      CC: 'clang-cl'
      CXX: 'clang-cl'
    steps:
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    - name: install cargo-about
      uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-about
    - name: install cargo-nextest
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - run: cargo do test --nextest
  test-macos:
    runs-on: macos-latest
    needs: [check-macos]
    env:
      ZNG_TP_LICENSES: true
    steps:
    - uses: dtolnay/rust-toolchain@stable
    - name: install cargo-about
      uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-about
    - name: install cargo-nextest
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-nextest
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - run: cargo do test --nextest
  test-doc:
    runs-on: ubuntu-latest
    needs: [check-ubuntu]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: sudo apt-get update -o Acquire::Retries=5 && sudo apt install libfontconfig1-dev -o Acquire::Retries=5
      - uses: Swatinem/rust-cache@v2
      - run: cargo do test --doc
  test-macro:
    runs-on: ubuntu-latest
    needs: [check-ubuntu]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-src
      - run: sudo apt-get update -o Acquire::Retries=5 && sudo apt install libfontconfig1-dev -o Acquire::Retries=5
      - uses: Swatinem/rust-cache@v2
      - run: cargo do test --macro --all
  test-render-ubuntu:
    runs-on: ubuntu-latest
    needs: [check-ubuntu]
    steps:
      - uses: dtolnay/rust-toolchain@stable
      - name: install winit deps
        run: |
             sudo apt-get update
             sudo apt install libxkbcommon-x11-0
      - uses: actions/checkout@v4
      - run: sudo apt-get update -o Acquire::Retries=5 && sudo apt install libfontconfig1-dev -o Acquire::Retries=5
      - uses: Swatinem/rust-cache@v2
      - name: cargo do test --render --no-prebuilt
        uses: coactions/setup-xvfb@6b00cf1889f4e1d5a48635647013c0508128ee1a
        with:
          run: cargo do test --render --no-prebuilt
  test-render-windows:
    runs-on: windows-latest
    needs: [check-windows]
    env:
      ZNG_TP_LICENSES: true
      CC: 'clang-cl'
      CXX: 'clang-cl'
    steps:
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - run: cargo do test --render --no-prebuilt
  test-render-macos:
    runs-on: macos-latest
    needs: [check-macos]
    env:
      ZNG_TP_LICENSES: true
    steps:
    - uses: dtolnay/rust-toolchain@stable
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - run: cargo do test --render --no-prebuilt

  test-all:
    runs-on: ubuntu-latest
    needs: [
      check-release, 
      check-wasm, 
      check-android,
      check-android-windows,
      check-android-macos,
      doc, 
      test-ubuntu, 
      test-windows, 
      test-macos, 
      test-doc, 
      test-macro, 
      test-render-ubuntu, 
      test-render-windows, 
      test-render-macos
    ]
    steps:
      - run: exit 0